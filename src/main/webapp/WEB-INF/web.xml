<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--使用过滤器自动转码-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--使用过滤器验证session是否过期(新用户访问任何页面跳转到登录页)和身份-->
    <filter>
        <filter-name>RootFilter</filter-name>
        <filter-class>filter.RootFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>RootFilter</filter-name>
        <url-pattern>/root/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>AdminFilter</filter-name>
        <filter-class>filter.AdminFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>AdminFilter</filter-name>
        <url-pattern>/admin/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>UserFilter</filter-name>
        <filter-class>filter.UserFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>UserFilter</filter-name>
        <url-pattern>/user/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>PointFilter</filter-name>
        <filter-class>filter.PointFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>PointFilter</filter-name>
        <url-pattern>/point/*</url-pattern>
    </filter-mapping>

    <!--在线人数监听器-->
    <listener>
        <listener-class>listener.OnlineUsers</listener-class>
    </listener>

    <!--使用ServletContextListener监听ServletContext，当ServletContexxt创建时同时创建Spring容器，
    并将创建完成的容器放到ServletContext即application中，在Web中获取Spring容器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--spring配置文件路径设置-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <!--springMVC-->
    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:applicationContext-controller.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springDispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--访问前端框架时使用tomcat默认解析-->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/webjars/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>
</web-app>